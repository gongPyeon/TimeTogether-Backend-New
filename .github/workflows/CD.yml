name: CD-Stable

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed

jobs:
  deploy-stable:
    if: >
      github.event.workflow_run.conclusion == 'success' &&
      github.event.workflow_run.head_branch == 'main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: SSH to Stable EC2 and Deploy (Blue-Green + Redis + Nginx)
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            set -e
            cd /home/ubuntu/meetnow

            echo "▶️ Redis 컨테이너 확인"
            if ! docker ps -a --format '{{.Names}}' | grep -q "meetnow-redis"; then
              echo "📦 Redis 컨테이너 없음 → 생성"
              docker compose -f docker-compose.v2.yml up -d meetnow-redis
            else
              echo "✅ Redis 컨테이너 이미 존재 → 건너뜀"
            fi

            echo "▶️ Blue-Green 배포 시작"
            if docker ps --format '{{.Names}}' | grep -q "meetnow-server-blue"; then
              CURRENT="blue"
              NEXT="green"
              PORT=8082
            else
              CURRENT="green"
              NEXT="blue"
              PORT=8081
            fi

            echo "🟦 현재 서버 컨테이너: $CURRENT"
            echo "🟩 신규 서버 컨테이너: $NEXT (PORT=$PORT)"

            # 신규 서버 컨테이너 실행 (항상 최신 이미지 pull)
            PORT=$PORT docker compose -f docker-compose.v2.yml --env-file .env.prod up -d --build --pull always meetnow-server

            # 컨테이너 이름을 blue/green 으로 교체
            docker rename meetnow-server-$PORT meetnow-server-$NEXT

            echo "🩺 $NEXT 컨테이너 헬스 체크 시작..."
            MAX_RETRIES=60
            RETRY_DELAY=3
            COUNT=0
            STATUS="000"

            until [ "$STATUS" = "200" ] || [ $COUNT -ge $MAX_RETRIES ]; do
              STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://127.0.0.1:$PORT/actuator/health || true)
              echo "⏳ Waiting for health check... (status=$STATUS)"
              sleep $RETRY_DELAY
              COUNT=$((COUNT+1))
            done

            if [ "$STATUS" != "200" ]; then
              echo "❌ 헬스체크 실패. 신규 컨테이너 로그 확인"
              docker logs meetnow-server-$NEXT --tail 20
              docker rm -f meetnow-server-$NEXT
              exit 1
            fi

            echo "✅ 신규 컨테이너($NEXT) 헬스 체크 성공"

            # 🔄 Nginx upstream.conf 교체
            echo "▶️ Nginx upstream.conf 갱신 (PORT=$PORT)"
            echo "upstream backend { server 127.0.0.1:$PORT; }" | sudo tee /etc/nginx/upstream.conf > /dev/null
            sudo nginx -t
            sudo systemctl reload nginx
            echo "✅ Nginx reload 완료 (backend → $PORT)"

            # 기존 컨테이너 종료
            if docker ps -a --format '{{.Names}}' | grep -q "meetnow-server-$CURRENT"; then
              echo "🗑 기존 컨테이너($CURRENT) 종료"
              docker rm -f meetnow-server-$CURRENT
            fi

            echo "🚀 Blue-Green 배포 완료 → 현재 활성 컨테이너는 $NEXT (PORT=$PORT)"